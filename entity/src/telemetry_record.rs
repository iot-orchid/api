//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "telemetry_record")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub timestamp: DateTime,
    pub microdevice_id: i32,
    pub source_topic: String,
    pub source_name: String,
    #[sea_orm(column_type = "JsonBinary")]
    pub data: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::microdevice::Entity",
        from = "Column::MicrodeviceId",
        to = "super::microdevice::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Microdevice,
}

impl Related<super::microdevice::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Microdevice.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
